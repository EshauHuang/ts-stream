daemon off;

error_log /dev/stdout info;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen ${RTMP_PORT};
        chunk_size 4000;

        application live {
        live 		on;
            
        on_publish		http://172.17.0.1:3535/auth/on_publish;
        }

        application hls_live {
            live on;

            on_publish http://172.17.0.1:3535/rtmp/on_publish;
            on_publish_done http://172.17.0.1:3535/rtmp/on_publish_done;
            exec /bin/sh /usr/hls-segment.sh $name;

            hls		on;
            hls_path	/tmp/hls;
            hls_nested	on;
            hls_cleanup	on;
        
        }
    }
}

http {
    sendfile on;
    tcp_nopush on;
    server_tokens off;
    access_log /dev/stdout combined;

    # Uncomment these lines to enable SSL.
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 1d;

    server {
        listen ${HTTP_PORT};

        # Uncomment these lines to enable SSL.
        # Update the ssl paths with your own certificate and private key.
            
        # listen ${HTTPS_PORT} ssl;
        # ssl_certificate     /opt/certs/example.com.crt;
        # ssl_certificate_key /opt/certs/example.com.key;

        location /live/ {
            alias /tmp/hls/;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control "no-cache";
            add_header Access-Control-Allow-Origin *;

            try_files $uri $uri/ /custom-message;
            }

        location /videos/ {
            alias /tmp/records/;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control "no-cache";
            add_header Access-Control-Allow-Origin *;

            try_files $uri $uri/ /custom-message;
        }

        location = /custom-message {
            add_header 'Access-Control-Allow-Origin' '*' always;

            return 204 "The file you are looking for does not exist.";
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /www/static;
        }

        location /crossdomain.xml {
            default_type text/xml;
            expires 24h;
        }
    }
}
